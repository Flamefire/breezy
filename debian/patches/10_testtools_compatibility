Description: (jelmer) Fix support for testtools 0.9.12. (Jelmer Vernooij)
Origin: commit, revision id: pqm@pqm.ubuntu.com-20110803174555-pmpu6ms4lgjudxzf
Author: Jelmer Vernooij <jelmer@samba.org>
Author: Canonical.com Patch Queue Manager <pqm@pqm.ubuntu.com>
Bug: https://launchpad.net/bugs/815423
Last-Update: 2011-08-03
Applied-Upstream: no
X-Bzr-Revision-Id: pqm@pqm.ubuntu.com-20110803174555-pmpu6ms4lgjudxzf

=== modified file 'bzrlib/tests/test_selftest.py'
--- old/bzrlib/tests/test_selftest.py	2011-08-02 01:10:27 +0000
+++ new/bzrlib/tests/test_selftest.py	2011-08-03 14:34:34 +0000
@@ -29,6 +29,7 @@
 from testtools import (
     ExtendedToOriginalDecorator,
     MultiTestResult,
+    __version__ as testtools_version,
     )
 from testtools.content import Content
 from testtools.content_type import ContentType
@@ -1072,17 +1073,31 @@
                 self.expectFailure("No absolute truth", self.assertTrue, True)
         runner = tests.TextTestRunner(stream=StringIO())
         result = self.run_test_runner(runner, Test("test_truth"))
-        self.assertContainsRe(runner.stream.getvalue(),
-            "=+\n"
-            "FAIL: \\S+\.test_truth\n"
-            "-+\n"
-            "(?:.*\n)*"
-            "No absolute truth\n"
-            "(?:.*\n)*"
-            "-+\n"
-            "Ran 1 test in .*\n"
-            "\n"
-            "FAILED \\(failures=1\\)\n\\Z")
+        if testtools_version <= (0, 9, 11):
+            self.assertContainsRe(runner.stream.getvalue(),
+                "=+\n"
+                "FAIL: \\S+\.test_truth\n"
+                "-+\n"
+                "(?:.*\n)*"
+                "No absolute truth\n"
+                "(?:.*\n)*"
+                "-+\n"
+                "Ran 1 test in .*\n"
+                "\n"
+                "FAILED \\(failures=1\\)\n\\Z")
+        else:
+            self.assertContainsRe(runner.stream.getvalue(),
+                "=+\n"
+                "FAIL: \\S+\.test_truth\n"
+                "-+\n"
+                "Empty attachments:\n"
+                "  log\n"
+                "\n"
+                "reason: {{{No absolute truth}}}\n"
+                "-+\n"
+                "Ran 1 test in .*\n"
+                "\n"
+                "FAILED \\(failures=1\\)\n\\Z")
 
     def test_result_decorator(self):
         # decorate results
@@ -1247,11 +1262,14 @@
             lambda trace=False: "ascii")
         result = self.run_test_runner(tests.TextTestRunner(stream=out),
             FailureWithUnicode("test_log_unicode"))
-        self.assertContainsRe(out.getvalue(),
-            "Text attachment: log\n"
-            "-+\n"
-            "\d+\.\d+  \\\\u2606\n"
-            "-+\n")
+        if testtools_version > (0, 9, 11):
+            self.assertContainsRe(out.getvalue(), "log: {{{\d+\.\d+  \\\\u2606}}}")
+        else:
+            self.assertContainsRe(out.getvalue(),
+                "Text attachment: log\n"
+                "-+\n"
+                "\d+\.\d+  \\\\u2606\n"
+                "-+\n")
 
 
 class SampleTestCase(tests.TestCase):
@@ -1736,14 +1754,16 @@
         result = self._run_test('test_fail')
         self.assertEqual(1, len(result.failures))
         result_content = result.failures[0][1]
-        self.assertContainsRe(result_content, 'Text attachment: log')
+        if testtools_version < (0, 9, 12):
+            self.assertContainsRe(result_content, 'Text attachment: log')
         self.assertContainsRe(result_content, 'this was a failing test')
 
     def test_error_has_log(self):
         result = self._run_test('test_error')
         self.assertEqual(1, len(result.errors))
         result_content = result.errors[0][1]
-        self.assertContainsRe(result_content, 'Text attachment: log')
+        if testtools_version < (0, 9, 12):
+            self.assertContainsRe(result_content, 'Text attachment: log')
         self.assertContainsRe(result_content, 'this test errored')
 
     def test_skip_has_no_log(self):


