Origin: commit, revision id: jelmer@jelmer.uk-20190113141635-f7p75zxtisiidha7
Author: Jelmer VernooÄ³ <jelmer@jelmer.uk>
Bug: https://launchpad.net/bugs/1811012
Bug-Debian: http://bugs.debian.org/918723
Last-Update: 2019-01-13
Applied-Upstream: no
X-Bzr-Revision-Id: jelmer@jelmer.uk-20190113141635-f7p75zxtisiidha7

=== modified file 'breezy/bzr/knitpack_repo.py'
--- old/breezy/bzr/knitpack_repo.py	2018-11-11 04:08:32 +0000
+++ new/breezy/bzr/knitpack_repo.py	2019-01-09 00:04:02 +0000
@@ -660,7 +660,7 @@
             pack_readv_requests = []
             for key, value in items:
                 # ---- KnitGraphIndex.get_position
-                bits = value[1:].split(' ')
+                bits = value[1:].split(b' ')
                 offset, length = int(bits[0]), int(bits[1])
                 pack_readv_requests.append((offset, length, (key, value[0:1])))
             # linear scan up the pack
@@ -685,7 +685,7 @@
                     df, _ = knit._parse_record_header(key, raw_data)
                     df.close()
                 pos, size = writer.add_bytes_record(raw_data, names)
-                write_index.add_node(key, eol_flag + "%d %d" % (pos, size))
+                write_index.add_node(key, eol_flag + b"%d %d" % (pos, size))
                 pb.update("Copied record", record_index)
                 record_index += 1
 

=== modified file 'breezy/git/errors.py'
--- old/breezy/git/errors.py	2018-11-16 11:37:47 +0000
+++ new/breezy/git/errors.py	2019-01-13 14:16:35 +0000
@@ -78,4 +78,4 @@
     def __init__(self, object, fields):
         brz_errors.BzrError.__init__(self)
         self.object = object
-        self.fields = ",".join(fields)
+        self.fields = b",".join(fields)

=== modified file 'breezy/git/tests/test_mapping.py'
--- old/breezy/git/tests/test_mapping.py	2018-11-11 04:08:32 +0000
+++ new/breezy/git/tests/test_mapping.py	2019-01-13 14:16:35 +0000
@@ -34,7 +34,10 @@
     )
 
 from .. import tests
-from ..errors import UnknownCommitExtra
+from ..errors import (
+    UnknownCommitExtra,
+    UnknownMercurialCommitExtra,
+    )
 from ..mapping import (
     BzrGitMappingv1,
     escape_file_id,
@@ -217,6 +220,22 @@
         self.assertEqual(
             rev.properties[u'git-mergetag-0'], tag.as_raw_string())
 
+    def test_unknown_hg_fields(self):
+        c = Commit()
+        c.tree = b"cc9462f7f8263ef5adfbeff2fb936bb36b504cba"
+        c.message = b"Some message"
+        c.committer = b"Committer"
+        c.commit_time = 4
+        c.author_time = 5
+        c.commit_timezone = 60 * 5
+        c.author_timezone = 60 * 3
+        c.author = b"Author"
+        c._extra = [(b"HG:extra", b"bla:Foo")]
+        mapping = BzrGitMappingv1()
+        self.assertRaises(
+            UnknownMercurialCommitExtra,
+            mapping.import_commit, c, mapping.revision_id_foreign_to_bzr)
+
 
 class RoundtripRevisionsFromBazaar(tests.TestCase):
 

=== modified file 'breezy/tests/per_pack_repository.py'
--- old/breezy/tests/per_pack_repository.py	2018-11-11 04:08:32 +0000
+++ new/breezy/tests/per_pack_repository.py	2019-01-09 00:04:02 +0000
@@ -26,6 +26,7 @@
 from .. import (
     controldir,
     errors,
+    gpg,
     osutils,
     repository,
     revision as _mod_revision,
@@ -299,6 +300,28 @@
                 combined_indices.difference([combined_index]),
                 combined_index._sibling_indices)
 
+    def test_pack_with_signatures(self):
+        format = self.get_format()
+        tree = self.make_branch_and_tree('.', format=format)
+        trans = tree.branch.repository.controldir.get_repository_transport(
+            None)
+        revid1 = tree.commit('start')
+        revid2 = tree.commit('more work')
+        strategy = gpg.LoopbackGPGStrategy(None)
+        repo = tree.branch.repository
+        self.addCleanup(repo.lock_write().unlock)
+        repo.start_write_group()
+        repo.sign_revision(revid1, strategy)
+        repo.commit_write_group()
+        repo.start_write_group()
+        repo.sign_revision(revid2, strategy)
+        repo.commit_write_group()
+        tree.branch.repository.pack()
+        # there should be 1 pack:
+        index = self.index_class(trans, 'pack-names', None)
+        self.assertEqual(1, len(list(index.iter_all_entries())))
+        self.assertEqual(2, len(tree.branch.repository.all_revision_ids()))
+
     def test_pack_after_two_commits_packs_everything(self):
         format = self.get_format()
         tree = self.make_branch_and_tree('.', format=format)

