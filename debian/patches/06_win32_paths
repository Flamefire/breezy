=== modified file 'bzrlib/tests/test_osutils.py'
Index: unstable/bzrlib/tests/test_osutils.py
===================================================================
--- unstable.orig/bzrlib/tests/test_osutils.py
+++ unstable/bzrlib/tests/test_osutils.py
@@ -928,8 +928,8 @@ class TestWin32Funcs(tests.TestCase):
         self.requireFeature(features.win32_feature)
         self.assertEqual('C:/foo', osutils._win32_abspath('C:\\foo'))
         self.assertEqual('C:/foo', osutils._win32_abspath('C:/foo'))
-        self.assertEqual('//HOST/path', osutils._win32_abspath(r'\\HOST\path'))
-        self.assertEqual('//HOST/path', osutils._win32_abspath('//HOST/path'))
+        self.assertEqual('//HOST/PATH', osutils._win32_abspath(r'\\HOST\path'))
+        self.assertEqual('//HOST/PATH', osutils._win32_abspath('//HOST/path'))
 
     def test_realpath(self):
         self.assertEqual('C:/foo', osutils._win32_realpath('C:\\foo'))
@@ -983,8 +983,8 @@ class TestWin32Funcs(tests.TestCase):
         self.assertEqual('C:/foo', osutils._win98_abspath('C:\\foo'))
         self.assertEqual('C:/foo', osutils._win98_abspath('C:/foo'))
         # UNC path
-        self.assertEqual('//HOST/path', osutils._win98_abspath(r'\\HOST\path'))
-        self.assertEqual('//HOST/path', osutils._win98_abspath('//HOST/path'))
+        self.assertEqual('//HOST/PATH', osutils._win98_abspath(r'\\HOST\path'))
+        self.assertEqual('//HOST/PATH', osutils._win98_abspath('//HOST/path'))
         # relative path
         cwd = osutils.getcwd().rstrip('/')
         drive = osutils.ntpath.splitdrive(cwd)[0]
Index: unstable/bzrlib/tests/test_transport.py
===================================================================
--- unstable.orig/bzrlib/tests/test_transport.py
+++ unstable/bzrlib/tests/test_transport.py
@@ -822,10 +822,10 @@ class TestWin32LocalTransport(tests.Test
         t = local.EmulatedWin32LocalTransport('file://HOST/path/to/some/dir/')
         for i in xrange(4):
             t = t.clone('..')
-        self.assertEquals(t.base, 'file://HOST/')
+        self.assertEquals(t.base, 'file://HOST/PATH/')
         # make sure we reach the root
         t = t.clone('..')
-        self.assertEquals(t.base, 'file://HOST/')
+        self.assertEquals(t.base, 'file://HOST/PATH/')
 
 
 class TestConnectedTransport(tests.TestCase):
Index: unstable/bzrlib/tests/test_urlutils.py
===================================================================
--- unstable.orig/bzrlib/tests/test_urlutils.py
+++ unstable/bzrlib/tests/test_urlutils.py
@@ -413,9 +413,9 @@ class TestUrlToPath(TestCase):
     def test_win32_unc_path_to_url(self):
         self.requireFeature(features.win32_feature)
         to_url = urlutils._win32_local_path_to_url
-        self.assertEqual('file://HOST/path',
+        self.assertEqual('file://HOST/PATH',
             to_url(r'\\HOST\path'))
-        self.assertEqual('file://HOST/path',
+        self.assertEqual('file://HOST/PATH',
             to_url('//HOST/path'))
 
         try:
@@ -423,7 +423,7 @@ class TestUrlToPath(TestCase):
         except UnicodeError:
             raise TestSkipped("local encoding cannot handle unicode")
 
-        self.assertEqual('file://HOST/path/to/r%C3%A4ksm%C3%B6rg%C3%A5s', result)
+        self.assertEqual('file://HOST/PATH/to/r%C3%A4ksm%C3%B6rg%C3%A5s', result)
         self.assertFalse(isinstance(result, unicode))
 
     def test_win32_local_path_from_url(self):
