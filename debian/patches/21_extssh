=== modified file 'breezy/location.py'
--- old/breezy/location.py	2020-06-28 23:13:22 +0000
+++ new/breezy/location.py	2020-11-22 15:12:57 +0000
@@ -83,14 +83,16 @@
 
 def parse_cvs_location(location):
     parts = location.split(':')
-    if parts[0] or parts[1] not in ('pserver', 'ssh'):
-        raise ValueError('not a valid pserver location string')
+    if parts[0] or parts[1] not in ('pserver', 'ssh', 'extssh'):
+        raise ValueError('not a valid CVS location string')
     try:
         (username, hostname) = parts[2].split('@', 1)
     except IndexError:
         hostname = parts[2]
         username = None
     scheme = parts[1]
+    if scheme == 'extssh':
+        scheme = 'ssh'
     path = parts[3]
     return (scheme, hostname, username, path)
 
@@ -125,7 +127,7 @@
     if not isinstance(location, string_types):
         raise AssertionError("location not a byte or unicode string")
 
-    if location.startswith(':pserver:'):
+    if location.startswith(':pserver:') or location.startswith(':extssh:'):
         return cvs_to_url(location)
 
     from .directory_service import directories

=== modified file 'breezy/tests/test_location.py'
--- old/breezy/tests/test_location.py	2020-06-28 23:13:22 +0000
+++ new/breezy/tests/test_location.py	2020-11-22 15:12:57 +0000
@@ -83,6 +83,12 @@
                 ':pserver:anonymous@odessa.cvs.sourceforge.net:/cvsroot/odess'))
         self.assertRaises(ValueError, location_to_url, ':pserver:blah')
 
+    def test_extssh(self):
+        self.assertEqual(
+            'cvs+ssh://anonymous@odessa.cvs.sourceforge.net/cvsroot/odess',
+            location_to_url(
+                ':extssh:anonymous@odessa.cvs.sourceforge.net:/cvsroot/odess'))
+
     def test_missing_scheme(self):
         self.skipTest('need clever guessing of scheme')
         self.assertEqual(

