=== modified file 'breezy/doc_generate/__init__.py'
Index: unstable/breezy/doc_generate/__init__.py
===================================================================
--- unstable.orig/breezy/doc_generate/__init__.py
+++ unstable/breezy/doc_generate/__init__.py
@@ -16,6 +16,9 @@
 
 from __future__ import absolute_import
 
+import datetime
+import os
+
 
 def get_module(target):
     mod_name = "breezy.doc_generate.autodoc_%s" % (target)
@@ -25,3 +28,14 @@ def get_module(target):
         mod = getattr(mod, comp)
     return mod
 
+
+def get_autodoc_datetime():
+    """Obtain the datetime to use for timestamps embedded in generated docs.
+
+    :return: A `datetime` object
+    """
+    try:
+        return datetime.datetime.utcfromtimestamp(
+            int(os.environ['SOURCE_DATE_EPOCH']))
+    except (KeyError, ValueError):
+        return datetime.datetime.utcnow()
Index: unstable/breezy/doc_generate/autodoc_bash_completion.py
===================================================================
--- unstable.orig/breezy/doc_generate/autodoc_bash_completion.py
+++ unstable/breezy/doc_generate/autodoc_bash_completion.py
@@ -14,28 +14,27 @@
 # along with this program; if not, write to the Free Software
 # Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 
-"bash_completion.py - create bash completion script from built-in bzr help"
+"bash_completion.py - create bash completion script from built-in brz help"
 
 from __future__ import absolute_import
 
-import time
-
 import breezy
 import breezy.help
 import breezy.commands
 import breezy.osutils
+from breezy.doc_generate import get_autodoc_datetime
 
 
 def get_filename(options):
-    return "%s.bash_completion" % (options.bzr_name)
+    return "%s.bash_completion" % (options.brz_name)
 
 
 def infogen(options, outfile):
-    tt = breezy.osutils.gmtime()
+    d = get_autodoc_datetime()
     params = \
-           { "bzrcmd": options.bzr_name,
-             "datestamp": time.strftime("%Y-%m-%d",tt),
-             "timestamp": time.strftime("%Y-%m-%d %H:%M:%S +0000",tt),
+           { "brzcmd": options.brz_name,
+             "datestamp": d.strftime("%Y-%m-%d"),
+             "timestamp": d.strftime("%Y-%m-%d %H:%M:%S +0000"),
              "version": breezy.__version__,
              }
 
@@ -43,10 +42,10 @@ def infogen(options, outfile):
 
 
 preamble = """\
-# bash completion functions for for Bazaar (%(bzrcmd)s)
+# bash completion functions for for Breezy (%(brzcmd)s)
 #
 # Large parts of this file are autogenerated from the internal
-# Bazaar documentation and data structures.
+# Breezy documentation and data structures.
 #
 # Generation time: %(timestamp)s
 """
Index: unstable/breezy/doc_generate/autodoc_man.py
===================================================================
--- unstable.orig/breezy/doc_generate/autodoc_man.py
+++ unstable/breezy/doc_generate/autodoc_man.py
@@ -26,13 +26,13 @@ from __future__ import absolute_import
 PLUGINS_TO_DOCUMENT = ["launchpad"]
 
 import textwrap
-import time
 
 import breezy
 import breezy.help
 import breezy.help_topics
 import breezy.commands
 import breezy.osutils
+from breezy.doc_generate import get_autodoc_datetime
 
 from breezy.plugin import load_plugins
 load_plugins()
@@ -45,11 +45,11 @@ def get_filename(options):
 
 def infogen(options, outfile):
     """Assembles a man page"""
-    tt = breezy.osutils.gmtime()
+    d = get_autodoc_datetime()
     params = \
-           { "bzrcmd": options.brz_name,
-             "datestamp": time.strftime("%Y-%m-%d",tt),
-             "timestamp": time.strftime("%Y-%m-%d %H:%M:%S +0000",tt),
+           { "brzcmd": options.brz_name,
+             "datestamp": d.strftime("%Y-%m-%d"),
+             "timestamp": d.strftime("%Y-%m-%d %H:%M:%S +0000"),
              "version": breezy.__version__,
              }
     outfile.write(man_preamble % params)
@@ -83,7 +83,7 @@ def command_name_list():
 
 def getcommand_list (params):
     """Builds summary help for command names in manpage format"""
-    bzrcmd = params["bzrcmd"]
+    brzcmd = params["brzcmd"]
     output = '.SH "COMMAND OVERVIEW"\n'
     for cmd_name in command_name_list():
         cmd_object = breezy.commands.get_cmd_object(cmd_name)
@@ -183,11 +183,11 @@ def environment_variables():
 
 
 man_preamble = """\
-.\\\"Man page for Breezy (%(bzrcmd)s)
+.\\\"Man page for Breezy (%(brzcmd)s)
 .\\\"
 .\\\" Large parts of this file are autogenerated from the output of
-.\\\"     \"%(bzrcmd)s help commands\"
-.\\\"     \"%(bzrcmd)s help <cmd>\"
+.\\\"     \"%(brzcmd)s help commands\"
+.\\\"     \"%(brzcmd)s help <cmd>\"
 .\\\"
 
 .ie \\n(.g .ds Aq \\(aq
@@ -198,23 +198,23 @@ man_preamble = """\
 man_head = """\
 .TH brz 1 "%(datestamp)s" "%(version)s" "Breezy"
 .SH "NAME"
-%(bzrcmd)s - Breezy next-generation distributed version control
+%(brzcmd)s - Breezy next-generation distributed version control
 .SH "SYNOPSIS"
-.B "%(bzrcmd)s"
+.B "%(brzcmd)s"
 .I "command"
 [
 .I "command_options"
 ]
 .br
-.B "%(bzrcmd)s"
+.B "%(brzcmd)s"
 .B "help"
 .br
-.B "%(bzrcmd)s"
+.B "%(brzcmd)s"
 .B "help"
 .I "command"
 .SH "DESCRIPTION"
 
-Breezy (or %(bzrcmd)s) is a distributed version control system that is powerful,
+Breezy (or %(brzcmd)s) is a distributed version control system that is powerful,
 friendly, and scalable.  Breezy is a fork of the Bazaar version control system.
 
 Breezy keeps track of changes to software source code (or similar information);
