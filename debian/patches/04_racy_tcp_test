=== modified file 'breezy/bzr/smart/ping.py'
--- old/breezy/bzr/smart/ping.py	2018-07-22 17:06:14 +0000
+++ new/breezy/bzr/smart/ping.py	2018-08-08 02:10:06 +0000
@@ -47,7 +47,7 @@
         client = _SmartClient(medium)
         # Use call_expecting_body (even though we don't expect a body) so that
         # we can see the response headers (if any) via the handler object.
-        response, handler = client.call_expecting_body('hello')
+        response, handler = client.call_expecting_body(b'hello')
         handler.cancel_read_body()
         self.outf.write('Response: %r\n' % (response,))
         if getattr(handler, 'headers', None) is not None:

=== modified file 'breezy/tests/blackbox/test_serve.py'
--- old/breezy/tests/blackbox/test_serve.py	2018-07-07 15:06:42 +0000
+++ new/breezy/tests/blackbox/test_serve.py	2018-08-08 02:10:06 +0000
@@ -322,7 +322,7 @@
         m = t.get_smart_medium()
         c = client._SmartClient(m)
         # Start, but don't finish a response
-        resp, response_handler = c.call_expecting_body('get', 'bigfile')
+        resp, response_handler = c.call_expecting_body(b'get', b'bigfile')
         self.assertEqual((b'ok',), resp)
         # Note: process.send_signal is a Python 2.6ism
         process.send_signal(signal.SIGHUP)
@@ -331,8 +331,8 @@
         # request to finish
         self.assertEqual(b'Requested to stop gracefully\n',
                          process.stderr.readline())
-        self.assertEqual(b'Waiting for 1 client(s) to finish\n',
-                         process.stderr.readline())
+        self.assertIn(process.stderr.readline(),
+                      (b'', b'Waiting for 1 client(s) to finish\n'))
         body = response_handler.read_body_bytes()
         if body != big_contents:
             self.fail('Failed to properly read the contents of "bigfile"')

=== modified file 'breezy/tests/test_smart_signals.py'
--- old/breezy/tests/test_smart_signals.py	2018-05-13 02:18:13 +0000
+++ new/breezy/tests/test_smart_signals.py	2018-08-08 02:10:06 +0000
@@ -175,8 +175,8 @@
         client_medium = medium.SmartSimplePipesClientMedium(client_read,
                             client_write, 'base')
         client_client = client._SmartClient(client_medium)
-        resp, response_handler = client_client.call_expecting_body('get',
-            'bigfile')
+        resp, response_handler = client_client.call_expecting_body(b'get',
+            b'bigfile')
         signals._sighup_handler(SIGHUP, None)
         self.assertTrue(factory.smart_server.finished)
         # We can still finish reading the file content, but more than that, and

=== modified file 'python3.flapping'
--- old/python3.flapping	2018-08-07 20:43:32 +0000
+++ new/python3.flapping	2018-08-08 02:10:06 +0000
@@ -11,7 +11,6 @@
 breezy.tests.blackbox.test_shared_repository.TestSharedRepo.test_init_repo_without_username
 breezy.tests.blackbox.test_shared_repository.TestSharedRepo.test_make_repository
 breezy.tests.blackbox.test_shared_repository.TestSharedRepo.test_make_repository_quiet
-breezy.tests.test_smart_transport.TestSmartTCPServer.test_graceful_shutdown_waits_for_clients_to_stop
 breezy.plugins.git.tests.test_remote.FetchFromRemoteToBzrTests.test_sprout_with_annotated_tag
 breezy.plugins.git.tests.test_remote.FetchFromRemoteToGitTests.test_sprout_with_annotated_tag
 breezy.plugins.git.tests.test_remote.RemoteControlDirTests.test_annotated_tag

=== modified file 'python3.passing'
--- old/python3.passing	2018-08-07 20:43:32 +0000
+++ new/python3.passing	2018-08-08 02:10:06 +0000
@@ -28915,6 +28915,7 @@
 breezy.tests.test_smart_transport.TestSmartServerStreamMedium.test_socket_wait_for_bytes_with_timeout_no_data
 breezy.tests.test_smart_transport.TestSmartServerStreamMedium.test_socket_wait_for_bytes_with_timeout_with_data
 breezy.tests.test_smart_transport.TestSmartTCPServer.test_get_error_unexpected
+breezy.tests.test_smart_transport.TestSmartTCPServer.test_graceful_shutdown_waits_for_clients_to_stop
 breezy.tests.test_smart_transport.TestSmartTCPServer.test_propagates_timeout
 breezy.tests.test_smart_transport.TestSmartTCPServer.test_serve_closes_out_finished_connections
 breezy.tests.test_smart_transport.TestSmartTCPServer.test_serve_conn_tracks_connections

